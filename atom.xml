<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://shxiangyan.github.io/</id>
    <title>Shxiangyan&apos;s Home</title>
    <updated>2020-05-19T13:35:41.347Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://shxiangyan.github.io/"/>
    <link rel="self" href="https://shxiangyan.github.io/atom.xml"/>
    <subtitle>shxiangyan@gmail.com</subtitle>
    <logo>https://shxiangyan.github.io/images/avatar.png</logo>
    <icon>https://shxiangyan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Shxiangyan&apos;s Home</rights>
    <entry>
        <title type="html"><![CDATA[5月19汇报]]></title>
        <id>https://shxiangyan.github.io/post/5-yue-19-hui-bao/</id>
        <link href="https://shxiangyan.github.io/post/5-yue-19-hui-bao/">
        </link>
        <updated>2020-05-19T12:58:39.000Z</updated>
        <summary type="html"><![CDATA[<p>记忆曲线提醒记单词,通过微信公众号推送给用户,一共八个记忆提醒周期,分别是5分钟,30分钟,12小时,1天,2天,4天,7天,15天.</p>
]]></summary>
        <content type="html"><![CDATA[<p>记忆曲线提醒记单词,通过微信公众号推送给用户,一共八个记忆提醒周期,分别是5分钟,30分钟,12小时,1天,2天,4天,7天,15天.</p>
<!-- more -->
<h2 id="1初始界面">1.初始界面##</h2>
<p>数据库使用了关系型数据库,与非关系型数据库两种.mysql的事件操作可以实现定时推送操作.把推送任务放到数据库中的原因是避免Python的全局GIL锁,多线程的使用服务器资源,增加并发量的.因为单词过多会导致数据量大,增删改查负荷过大.数据库采用双表设计,一张表存储全部数据,一张表用于推送数据,到推送时间的数据,插入第二张表.python代码实现扫描第二张表,如果第二张表有数据推送给用户,之后删除在第二张表中推送过的数据,更改第一张表阶段条目,生成推送事件.</p>
<p>输入单词以后的翻译部分,是通过爬虫得到,并得到读音.为了节约服务器存储资源,读音并不存储,而是,直接利用读音在翻译网站的URL直接访问到,推送给用户,每次输入单词以后都可以得到读音.也就是说,单词可以被多次输入但是并不多次存储,这是因为使用了非关系型数据库,来表示单词是否被存储过.<br>
<img src="https://shxiangyan.github.io//post-images/1589893570321.jpg" alt="" loading="lazy"></p>
<h2 id="2查看帮助">2.查看帮助</h2>
<figure data-type="image" tabindex="1"><img src="https://shxiangyan.github.io//post-images/1589893586141.jpg" alt="" loading="lazy"></figure>
<h2 id="3插入单词到计划推送">3.插入单词到计划推送##</h2>
<p>输入两次单词会存储到数据库推送中<br>
<img src="https://shxiangyan.github.io//post-images/1589893601860.jpg" alt="" loading="lazy"></p>
<h2 id="4删除">4.删除</h2>
<p>删除需要删除三项:1,事件.2,mysql总体数据表中数据.3,sqlite数据表中数据<br>
删除需要用固定的语法:{delete.word}<br>
<img src="https://shxiangyan.github.io//post-images/1589893612609.jpg" alt="" loading="lazy"></p>
<h2 id="5听力训练">5.听力训练##</h2>
<p>有CET-6的听力被我分篇截开,大约一篇2分钟,点击listening按钮以后会随机从服务器挑选一篇,以发送信息发方式发送给用户.<br>
<img src="https://shxiangyan.github.io//post-images/1589893626370.jpg" alt="" loading="lazy"><br>
<img src="https://shxiangyan.github.io//post-images/1589893636478.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[4月28汇报]]></title>
        <id>https://shxiangyan.github.io/post/4-yue-28-hui-bao/</id>
        <link href="https://shxiangyan.github.io/post/4-yue-28-hui-bao/">
        </link>
        <updated>2020-04-28T15:07:51.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1人脸识别">1.人脸识别</h2>
<figure data-type="image" tabindex="1"><img src="https://shxiangyan.github.io//post-images/1588086758980.jpg" alt="" loading="lazy"></figure>
<p>该人脸识别准确率98%,可用与嵌入式设备.</p>
<h2 id="2视频分帧">2.视频分帧</h2>
<h3 id="21分帧提取面部信息">2.1分帧提取面部信息</h3>
<figure data-type="image" tabindex="2"><img src="https://shxiangyan.github.io//post-images/1588086809805.jpg" alt="" loading="lazy"></figure>
<h3 id="22分帧提取面部信息">2.2分帧提取面部信息</h3>
<figure data-type="image" tabindex="3"><img src="https://shxiangyan.github.io//post-images/1588086824969.jpg" alt="" loading="lazy"></figure>
<h3 id="23特征点比对提取特征训练模型">2.3特征点比对:(提取特征)训练模型</h3>
<figure data-type="image" tabindex="4"><img src="https://shxiangyan.github.io//post-images/1588086843436.jpg" alt="" loading="lazy"></figure>
<h3 id="24转换脸部信息未完成">2.4转换脸部信息:(未完成)</h3>
<h2 id="3yolo-v4">3.YOLO v4</h2>
<p>目标检测网络模型测试</p>
<h2 id="4钢管裂纹检测">4.钢管裂纹检测</h2>
<p>目的:对钢管图像做裂痕检测，应用于工程生成后期检测，根据图像统计信息作出裂痕归类，并给出相应处理信息。</p>
<p>方法一(深度学习):</p>
<p>技术:图像特征提取、图像标记、图像区域特征属性</p>
<figure data-type="image" tabindex="5"><img src="http://hi.csdn.net/attachment/201105/27/0_1306479892788E.gif" alt="" loading="lazy"></figure>
<p>方法二(opencv):</p>
<ol>
<li>图像灰度化</li>
<li>增加对比度</li>
<li>Canny边缘检测</li>
<li>用形态学连接临近裂缝</li>
<li>找出所有连通域，删除非裂缝噪点区域</li>
<li>对每个连通域提取骨架，测量长度和宽度</li>
</ol>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdn.net/20180803215201452?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Z1bm55V2hpdGVDYXQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="" loading="lazy"></figure>
<p>转化为二值图:</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdn.net/20180803215301658?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Z1bm55V2hpdGVDYXQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="" loading="lazy"></figure>
<p>高斯滤波:</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdn.net/20180803215516584?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Z1bm55V2hpdGVDYXQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="" loading="lazy"></figure>
<p>计算像素位置</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于递归卷积神经网络的语音识别研究]]></title>
        <id>https://shxiangyan.github.io/post/speech/</id>
        <link href="https://shxiangyan.github.io/post/speech/">
        </link>
        <updated>2020-04-24T06:59:59.000Z</updated>
        <summary type="html"><![CDATA[<p>🎧🎧🎤🎤</p>
]]></summary>
        <content type="html"><![CDATA[<p>🎧🎧🎤🎤</p>
<!-- more -->
<h2 id="1-概要">1. 概要</h2>
<p>[语音识别][1]:利用计算机将语音信号转化为对顶其内容的文本,语音识别是一个交叉学科,它的应用也表现在很多方面,互联网时代语音识别作用越来越广,它渐渐成为互联网的入口.</p>
<p>语音识别系统框图:</p>
<figure data-type="image" tabindex="1"><img src="https://stevenocean.github.io/2019/05/02/first-meet-asr-and-kaldi-install-use/asr-001.png" alt="" loading="lazy"></figure>
<p>主要分为[特征提取,声学模型,发音字典,语言模型][2],其中声学模型和语言模型是在训练阶段得到的.声学模型由大量带标注的语言信号训练得来.语言模型则是通过大量的文本信号经过统计方法得到.</p>
<p>解码阶段解码器综合了声学模型发音字典和语言模型等等知识元对测试语音进行打分,并经过最优路径搜索得到最优的词序列.解码就是给定观测序列O的条件下求取最优词序列W的过程,进一步可以通过贝叶斯公式展开.可以得到声学模型自然度和语言模型先验概率乘积的形式</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲
\hat{W}&amp;=arg m…'>\begin{align}
\hat{W}&amp;=arg maxP(W|O)=arg max\frac{P(O|W)P(W)}{P(O)}\\
&amp;=arg maxP(O|W)P(W)
\end{align}
</p>
<p>语音识别各模块的作用:</p>
<ol>
<li>
<p>特征提取:通过信号处理手段将原始的语音波形转换成特征矢量序列,作为语音识别系统的输入;语音识别系统信号常用16kHz/8kHz采样,常用25ms帧长,10ms帧移;常用特征提取:MFCC,PLP,fbank等短时频谱特征.(将语音信号的时域波形首先转换成平域信号,在经过一些信号处理手段,滤波,[离散余弦变换][1]等得到最终的语音特征)https://zhuanlan.zhihu.com/p/85299446</p>
</li>
<li>
<p>声学模型:对语音特征进行刻画的模型,它是一个概率模型,刻画语音片段的属性声学建模技术是语言识别系统中的一个关键技术,他对系统的性能起着重要的作用.最常见的声学模型是[隐马尔科夫][2](Hidden Markov Model,HMM)模型,隐马尔可夫模型被用来处理语音声学序列的时间特征.https://zhuanlan.zhihu.com/p/63753017</p>
<p>建模单元:每一个基本的语言建模单元(单词,音素,三音素)对应一个HMM.</p>
<p>拓扑结构:从左到右三状态,状态一到状态五是虚拟状态用于连接前后的HMM,状态2,3,4是实际的HMM物理状态.</p>
<p>HMM中的两个序列:</p>
<p>每个状态定义了两个分布,第一从状态到观测的分布,HMM的发射概率b.第二是状态之间的跳转分布,HMM的转移概率a.每一个物理状态都可以跳转到自身或者跳转到下一个状态因此转移概率是一个离散的概率分布,而观测概率分布则是一个连续的概率分布.HMM的性能主要由发射概率来决定.传统的声学建模中经常使用高斯混合模型GMM来建模HMM的发射概率.而在基于深度学习的声学建模方法中常使用深度神经网络来建模HMM的发射概率模型.</p>
<p>状态序列S={<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,...,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">s_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> }</p>
<p>观测序列O={<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>o</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">o_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>o</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">o_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,...,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>o</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">o_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> }</p>
<figure data-type="image" tabindex="2"><img src="http://img3.itboth.com/65/58/BVzQV3.jpeg" alt="" loading="lazy"></figure>
</li>
<li>
<p>发音字典:是连接声学模型和语言模型的桥梁,发音字典包含了词(word)到声学建模单元(音素)的映射.语音识别中称声学建模单元为音素.将词汇表里所有的词对应的发音都总结在一起便构成了发音字典.</p>
</li>
<li>
<p>语言模型:是语言识别系统中一个不可或缺的模型.因为人说话往往有一定的意义,符合一定的语言规律因此通过使用语言模型可以很好的和解码器结合引导搜索的算法,并且语言模型还可以对相似的发音进行区别.最常使用的是N-gram语言模型.该模型使用了马尔科夫假设,即第N个词的概率只和前N-1个词相关.</p>
<p>N-gram语言模型:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>k</mi></msub><mo>)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><mi>P</mi><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo></mrow><mo>≈</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><mi>P</mi><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msub><mo>)</mo></mrow></mrow><annotation encoding="application/x-tex">P(w_1,w_2,...,w_k)=\prod_{i=1}^K {P(w_i|w_1,...,w_{i-1})}\approx \prod_{i-1}^K {P(w_i|w_{i-n+1,...,w_{i-1}})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1643360000000005em;vertical-align:-1.336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32808571428571426em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.291765em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p>
</li>
<li>
<p>解码和搜索:解码器的好坏以及效率如何直接关系到了语音识别系统的快慢.在语音识别系统中发音字典语言模型和声学模型构成一个潜在的巨大的解码网络.</p>
<p>动态解码算法:解码网络动态生成</p>
<p>静态解码算法:是事先生成的,空间换时间,速度快.加权有限状态机(WFST)对声学模型H,因素上下文关系C,发音字典L,语言模型G做一个统一的图表示.得到HCLG再通过合成操作,确定化操作,最小化操作等得到最终的解码网络,在该解码网络上进行搜索就是静态解码器的最基本的原理.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo>(</mo><mi>H</mi><mo>∘</mo><mi>C</mi><mo>∘</mo><mi>L</mi><mo>∘</mo><mi>G</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">S=min(det(H\circ C\circ L\circ G))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>一遍解码:一套模型对语言信号进行搜索.</p>
<p>多遍解码:使用一套小的模型.首先解码出一个包含多路径的词格,再使用较大的模型在词格上进行搜索,多遍解码得到更好的效果.</p>
</li>
</ol>
<h2 id="2-研究现状">2. 研究现状</h2>
<h3 id="21-gmm-hmm2">2.1 [GMM-HMM][2]</h3>
<p>20世纪80年代至今,语音识别三大基石:隐马尔克夫模型,高斯混合模型和MFCC/PLP短时特征.https://zhuanlan.zhihu.com/p/71949938</p>
<h3 id="22-dnn-hmm">2.2 DNN-HMM</h3>
<p>2011年,基于深层神经网络(DNN)的DNN-HMM声学模型建模技术出现,极大地提高了语音识别系统的性能.转移概率不变,发射概率DNN进行建模和估计.三大特点:</p>
<ol>
<li>使用深层神经网络直接对HMM的三因素进行建模,状态参数互相共享,使用统一的目标函数,多个隐含层同时进行特征提取和模式分类,模型参数更加有效.</li>
<li>使用多个隐含层的神经网络,建模能力随着网络的层数和每层的节点数的增多而增强.</li>
<li>使用长时间的输入窗来作为神经网络的输入.</li>
</ol>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdn.net/20160828205645102" alt="" loading="lazy"></figure>
<h3 id="23-卷积神经网络cnn声学模型">2.3 卷积神经网络(CNN)声学模型</h3>
<figure data-type="image" tabindex="4"><img src="http://web.ee.nthu.edu.tw/var/file/175/1175/pictures/33/m/mczh-tw1280x800_large978_180340278901.png" alt="" loading="lazy"></figure>
<p>语谱图:明暗相间的条纹代表共振峰,明暗相间的条纹具有一定的局部性,频域:局部信息;时间轴可以看出语谱图具有一定的连续性.时域:长时信息.在输入层使用局部连接的权重对语言信号频率上的各个子代进行建模,因此这个结构能够很好的刻画语音信号的局部特征,当得到各个子代的神经网络输出之后,再maxpoling操作进行对子代的输出进行降维.不同人说话呢的共增峰位置不同,加入maxpoling能够很好的捕捉不同人语音的共振峰位置,因此能够增强鲁棒性提高识别性能.不同子代的神经网络输出被拼接到一起送入全连接层.</p>
<h3 id="24-递归神经网络rnn声学模型">2.4 递归神经网络(RNN)声学模型</h3>
<p>为了建模语言信息时域上的长时信息,使用了递归连接的权重来建模时域的上下文关系,递归神经网络可以进一步在时域上进行展开,无论是在空间的变换域还是在时域都是一个深层的神经网络</p>
<h3 id="25-长短时记忆递归神经网络lstm-rnn声学模型">2.5 长短时记忆递归神经网络(LSTM RNN)声学模型</h3>
<p>解决时间维度的梯度消失问题</p>
<h2 id="3研究内容">3.研究内容</h2>
<h2 id="4创新内容">4.创新内容</h2>
<h2 id="5参考文献">5.参考文献</h2>
<p>[1] 刘长征，张磊．语音识别中卷积神经网络优化算法[J]．哈尔滨理工大学学报，2016(3):34-38．</p>
<p>[2] 金超，龚铖，李辉．语音识别中神经网络声学模型的说话人自适应研究[J]．计算机应用与软件，2018,35(2):200-205,266．</p>
<p>[3] Cai M,Liu J.Maxout neurons for deep convolutional and LSTM neural networks in speech  recognition[J].Science Direct,2016,77:53-64．</p>
<p>[4] 梁玉龙，屈丹，李真，等．基于卷积神经网络的维吾尔语语音识别[J]．信息工程大学学报，2017,18(1):44-50．</p>
<p>[5] 杨洋，汪毓铎．基于改进卷积神经网络算法的语音识别[J]．应用声学，2018,37(6):108-114．</p>
<p>[6]Fan R C,Liu G.CNN-based audio front end processing on speech recognition[C]//2018 International Conference on Audio,Language and Image Processing(ICALIP),2018:349-354．</p>
<p>[7] 高净植，刘祎，白旭，等．平稳小波域深度残差CNN用于低剂量CT图像估计[J]．计算机应用，2018,38(12):236-242．</p>
<p>[8] Jiang W,Zhang L.Geospatial data to images:A deep-learning framework for traffic forecasting[J].Tsinghua Science and Technology,2019,24(1):52-64．</p>
<p>[9]Graves A,Jaitly N.Towards end-to-end speech recognition with recurrent neural networks[C]//International Conference on Machine Learning.2014:1764-1772．</p>
<p>[10] 王庆楠，郭武，解传栋．基于端到端技术的藏语语音识别[J]．模式识别与人工智能，2017(4):73-78．</p>
<p>[11] 姚煜，Chellali R．基于双向长短时记忆-联结时序分类和加权有限状态转换器的端到端中文语音识别系统[J]．计算机应用，2018,38(9):2495-2499．</p>
<p>[12] 于重重，陈运兵，孙沁瑶，等．基于动态BLSTM和CTC的濒危语言语音识别研究[J]．计算机应用研究，2019,36(11):3334-3337．</p>
<p>[13] Tan T,Qian Y,Hu H,et al.Adaptive very deep convolutional residual network for noise robust speech recognition[J].IEEE/ACM Transactions on Audio,Speech,and Language Processing,2018,26(8):1393-1405．</p>
<p>[14]Qian Y,Woodland P C.Very deep convolutional neural networks for robust speech recognition[C]//Spoken Language Technology Workshop.IEEE,2017.</p>
<p>[15]张瑞珍,韩跃平,张晓通.基于深度LSTM的端到端的语音识别[J/OL].中北大学学报(自然科学版),2020(02):244-248[2020-04-24].http://kns.cnki.net/kcms/detail/14.1332.TH.20200421.1336.002.html.</p>
<p>[16]刘娟宏,胡彧,黄鹤宇.端到端的深度卷积神经网络语音识别[J].计算机应用与软件,2020,37(04):192-196.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GAN]]></title>
        <id>https://shxiangyan.github.io/post/gan/</id>
        <link href="https://shxiangyan.github.io/post/gan/">
        </link>
        <updated>2020-04-15T03:59:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-gangenerative-adversarial-network">1. GAN(Generative Adversarial Network)</h2>
<p>一个生成对抗网络包含两个均由多层神经网络构成的模型:(Generaive Model &amp; Discriminative Model).G 产生仿真数据分布,D 判别数据是仿真还是真实的.GAN的训练过程是使G产生的仿真数据尽可能逼近真实数据,同时又使D尽量好地区分仿真数据和真实数据,目标是使G产生的数据足以以真乱假,是D判别真假的概率均为0.5.</p>
<pre><code class="language-python">#+BEGIN_SRC python output:results
import torch
import torch.nn as nn
import numpy as np
import matplotlib.pyplot as plt

# torch.manual_seed(1)    # reproducible
# np.random.seed(1)

# Hyper Parameters
BATCH_SIZE = 64
LR_G = 0.0001           # learning rate for generator
LR_D = 0.0001           # learning rate for discriminator
N_IDEAS = 5             # think of this as number of ideas for generating an art work (Generator)
ART_COMPONENTS = 15     # it could be total point G can draw in the canvas
PAINT_POINTS = np.vstack([np.linspace(-1, 1, ART_COMPONENTS) for _ in range(BATCH_SIZE)])

# show our beautiful painting range
# plt.plot(PAINT_POINTS[0], 2 * np.power(PAINT_POINTS[0], 2) + 1, c='#74BCFF', lw=3, label='upper bound')
# plt.plot(PAINT_POINTS[0], 1 * np.power(PAINT_POINTS[0], 2) + 0, c='#FF9359', lw=3, label='lower bound')
# plt.legend(loc='upper right')
# plt.show()


def artist_works():     # painting from the famous artist (real target)
    a = np.random.uniform(1, 2, size=BATCH_SIZE)[:, np.newaxis]
    paintings = a * np.power(PAINT_POINTS, 2) + (a-1)
    paintings = torch.from_numpy(paintings).float()
    return paintings

G = nn.Sequential(                      # Generator
    nn.Linear(N_IDEAS, 128),            # random ideas (could from normal distribution)
    nn.ReLU(),
    nn.Linear(128, ART_COMPONENTS),     # making a painting from these random ideas
)

D = nn.Sequential(                      # Discriminator
    nn.Linear(ART_COMPONENTS, 128),     # receive art work either from the famous artist or a newbie like G
    nn.ReLU(),
    nn.Linear(128, 1),
    nn.Sigmoid(),                       # tell the probability that the art work is made by artist
)

opt_D = torch.optim.Adam(D.parameters(), lr=LR_D)
opt_G = torch.optim.Adam(G.parameters(), lr=LR_G)

plt.ion()   # something about continuous plotting

for step in range(10000):
    artist_paintings = artist_works()           # real painting from artist
    G_ideas = torch.randn(BATCH_SIZE, N_IDEAS)  # random ideas
    G_paintings = G(G_ideas)                    # fake painting from G (random ideas)

    prob_artist0 = D(artist_paintings)          # D try to increase this prob
    prob_artist1 = D(G_paintings)               # D try to reduce this prob

    D_loss = - torch.mean(torch.log(prob_artist0) + torch.log(1. - prob_artist1))
    G_loss = torch.mean(torch.log(1. - prob_artist1))

    opt_D.zero_grad()
    D_loss.backward(retain_graph=True)      # reusing computational graph
    opt_D.step()

    opt_G.zero_grad()
    G_loss.backward()
    opt_G.step()

    if step % 50 == 0:  # plotting
        plt.cla()
        plt.plot(PAINT_POINTS[0], G_paintings.data.numpy()[0], c='#4AD631', lw=3, label='Generated painting',)
        plt.plot(PAINT_POINTS[0], 2 * np.power(PAINT_POINTS[0], 2) + 1, c='#74BCFF', lw=3, label='upper bound')
        plt.plot(PAINT_POINTS[0], 1 * np.power(PAINT_POINTS[0], 2) + 0, c='#FF9359', lw=3, label='lower bound')
        plt.text(-.5, 2.3, 'D accuracy=%.2f (0.5 for D to converge)' % prob_artist0.data.numpy().mean(), fontdict={'size': 13})
        plt.text(-.5, 2, 'D score= %.2f (-1.38 for G to converge)' % -D_loss.data.numpy(), fontdict={'size': 13})
        plt.ylim((0, 3));plt.legend(loc='upper right', fontsize=10);plt.draw();plt.pause(0.01)

plt.ioff()
plt.show()
</code></pre>
<h2 id="2-cycle-gan">2. Cycle GAN</h2>
<p>CycleGAN的创新点在于能够在源域和目标域之间，无须建立训练数据间一对一的映射，就可实现这种迁移.</p>
<figure data-type="image" tabindex="1"><img src="https://pic1.zhimg.com/80/v2-a0b491f3983739c6aadb892254d34b00_720w.jpg" alt="" loading="lazy"></figure>
<p>想要做到这点，有两个比较重要的点，第一个就是双判别器。如下图所示，两个分布X,Y，生成器G，F分别是X到Y和Y到X的映射，两个判别器Dx,Dy可以对转换后的图片进行判别。第二个点就是cycle-consistency loss，用数据集中其他的图来检验生成器，这是防止G和F过拟合，比如想把一个小狗照片转化成梵高风格，如果没有cycle-consistency loss，生成器可能会生成一张梵高真实画作来骗过Dx，而无视输入的小狗。</p>
<figure data-type="image" tabindex="2"><img src="https://pic3.zhimg.com/80/v2-dde91dabff84db3086a4c8b761e46eb6_720w.jpg" alt="" loading="lazy"></figure>
<p>Cycle Consistency 损失</p>
<pre><code class="language-python">D_A_loss_1 = tf.reduce_mean(tf.squared_difference(dec_A,1))
D_B_loss_1 = tf.reduce_mean(tf.squared_difference(dec_B,1))

D_A_loss_2 = tf.reduce_mean(tf.square(dec_gen_A))
D_B_loss_2 = tf.reduce_mean(tf.square(dec_gen_B))


D_A_loss = (D_A_loss_1 + D_A_loss_2)/2 #前向指导
D_B_loss = (D_B_loss_1 + D_B_loss_2)/2


g_loss_B_1 = tf.reduce_mean(tf.squared_difference(dec_gen_A,1))#反向生成
g_loss_A_1 = tf.reduce_mean(tf.squared_difference(dec_gen_A,1))


cyc_loss = tf.reduce_mean(tf.abs(input_A-cyc_A)) + tf.reduce_mean(tf.abs(input_B-cyc_B))
g_loss_A = g_loss_A_1 + 10*cyc_loss
g_loss_B = g_loss_B_1 + 10*cyc_loss
</code></pre>
<h2 id="3-接下来的工作">3. 接下来的工作</h2>
<p>利用GAN预训练模型制作姿态估计数据集,自动生成模型.</p>
<p>对OpenCV考察调研</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[服务器配置]]></title>
        <id>https://shxiangyan.github.io/post/fu-wu-qi-pei-zhi/</id>
        <link href="https://shxiangyan.github.io/post/fu-wu-qi-pei-zhi/">
        </link>
        <updated>2020-04-10T13:20:02.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1显卡">1.显卡</h2>
<table>
<thead>
<tr>
<th style="text-align:center">型号(NVIDIA GetForce)</th>
<th style="text-align:center">显存</th>
<th style="text-align:center">精度</th>
<th style="text-align:center">价格(元)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">2080Ti</td>
<td style="text-align:center">11</td>
<td style="text-align:center">13.4</td>
<td style="text-align:center">9999</td>
</tr>
<tr>
<td style="text-align:center">2080</td>
<td style="text-align:center">8</td>
<td style="text-align:center">10.1</td>
<td style="text-align:center">5999</td>
</tr>
<tr>
<td style="text-align:center">2070</td>
<td style="text-align:center">8</td>
<td style="text-align:center">7.4</td>
<td style="text-align:center">4599</td>
</tr>
<tr>
<td style="text-align:center">Titan V</td>
<td style="text-align:center">12</td>
<td style="text-align:center">14.8</td>
<td style="text-align:center">24099</td>
</tr>
<tr>
<td style="text-align:center">Titan RTX</td>
<td style="text-align:center">24</td>
<td style="text-align:center">12.4</td>
<td style="text-align:center">20199</td>
</tr>
<tr>
<td style="text-align:center">TITAN Xp</td>
<td style="text-align:center">12</td>
<td style="text-align:center">12</td>
<td style="text-align:center">9699</td>
</tr>
<tr>
<td style="text-align:center">1080Ti</td>
<td style="text-align:center">11</td>
<td style="text-align:center">11.5</td>
<td style="text-align:center">8699</td>
</tr>
<tr>
<td style="text-align:center">1080</td>
<td style="text-align:center">8</td>
<td style="text-align:center">9</td>
<td style="text-align:center">4899</td>
</tr>
<tr>
<td style="text-align:center">1070Ti</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8.1</td>
<td style="text-align:center">3999</td>
</tr>
<tr>
<td style="text-align:center">1070</td>
<td style="text-align:center">8</td>
<td style="text-align:center">6.5</td>
<td style="text-align:center">2899</td>
</tr>
<tr>
<td style="text-align:center">1060</td>
<td style="text-align:center">6</td>
<td style="text-align:center">4.3</td>
<td style="text-align:center">2199</td>
</tr>
</tbody>
</table>
<h2 id="2配置推荐">2.配置推荐</h2>
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">型号</th>
<th style="text-align:center">数量</th>
<th style="text-align:center">共金额(元)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">CPU</td>
<td style="text-align:center">英特尔i7-9700KF 8核16线程</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2799</td>
</tr>
<tr>
<td style="text-align:center">GPU</td>
<td style="text-align:center">2080Ti</td>
<td style="text-align:center">2</td>
<td style="text-align:center">19998</td>
</tr>
<tr>
<td style="text-align:center">主板</td>
<td style="text-align:center">华硕PRIME Z390-P</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1249</td>
</tr>
<tr>
<td style="text-align:center">内存</td>
<td style="text-align:center">海盗船复仇者LPX 16GB DDR4 3000（CMK16GX4M1B3000C15）</td>
<td style="text-align:center">4</td>
<td style="text-align:center">2076</td>
</tr>
<tr>
<td style="text-align:center">电源</td>
<td style="text-align:center">海盗船RM1000x</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1299</td>
</tr>
<tr>
<td style="text-align:center">固态</td>
<td style="text-align:center">Intel 760P M.2 2280（512GB）</td>
<td style="text-align:center">1</td>
<td style="text-align:center">749</td>
</tr>
<tr>
<td style="text-align:center">机械硬盘</td>
<td style="text-align:center">希捷BarraCuda Pro 4TB 7200转 128MB</td>
<td style="text-align:center">1</td>
<td style="text-align:center">649</td>
</tr>
<tr>
<td style="text-align:center">散热</td>
<td style="text-align:center">海盗船H150i PRO RGB</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1379</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">总金</td>
<td style="text-align:center">30948</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[华为开发者会议]]></title>
        <id>https://shxiangyan.github.io/post/huawei/</id>
        <link href="https://shxiangyan.github.io/post/huawei/">
        </link>
        <updated>2020-03-31T04:06:44.000Z</updated>
        <summary type="html"><![CDATA[<p>👉<br>
👇</p>
]]></summary>
        <content type="html"><![CDATA[<p>👉<br>
👇</p>
<!-- more -->
<h1 id="1三大挑战">1.三大挑战</h1>
<h2 id="11数据">1.1数据</h2>
<p>如何海量数据挖掘有效信息?</p>
<h3 id="111-利用生成数据训练模型">1.1.1 利用生成数据训练模型</h3>
<p>为了解决数据标注瓶颈的关键技术.生成数据主要应用于智慧城市,智能驾驶.</p>
<ol>
<li>
<p>自动数据扩充</p>
</li>
<li>
<p>利用GAN模型来生成更多的数据</p>
</li>
<li>
<p>利用计算机图形学技术生成虚拟数据</p>
</li>
</ol>
<p>问题:单一的数据硬标签让数据自动扩充以后的图像不能完美的识别.</p>
<p>解决方法:知识蒸馏与数据扩充相结合:通过预训练模型对数据扩增的图片产生软标签,用软标签指导模型训练.</p>
<h3 id="112-对齐不同模态的数据">1.1.2 对齐不同模态的数据</h3>
<p>主要应用于,智能驾驶,智能多媒体</p>
<p>挑战:</p>
<ul>
<li>多模态信息表示</li>
<li>模态联合映射</li>
<li>模态对齐</li>
<li>模态融合</li>
<li>多模态协同融合</li>
</ul>
<p>根据文本\图像信息以及用户的数据建立多模态的查询语句.</p>
<h2 id="12-模型">1.2 模型</h2>
<h3 id="121-设计">1.2.1 设计</h3>
<p>用自动网络搜索代替手工网络设计.</p>
<p>挑战:</p>
<ul>
<li>搜索空间(人工经验来定义)</li>
<li>搜索算子(人工设计)</li>
<li>迁移性差</li>
</ul>
<p>PC-DARTS:局部连接的思路,解决网络冗余问题边正则化思想,解决局部连接带来的不稳定性.</p>
<h3 id="122-加速">1.2.2 加速</h3>
<p>挑战:</p>
<ul>
<li>云测大模型无法适配段侧的有限算力</li>
</ul>
<p>加法网络:新型算子加速卷积网络.使用曼哈顿距离取代欧式,卷积无需乘法计算,使用8比特整数计算,对硬件更加友好,功耗更低.公式如下:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">d(i,j)=|x_1-x_2|+|y_1-y_2|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
<h2 id="13-知识">1.3 知识</h2>
<h3 id="131-定义视觉与训练模型">1.3.1 定义视觉与训练模型</h3>
<p>挑战:</p>
<ul>
<li>监督学习需要海量的样本,数据拟合无法泛华到不同的数据.</li>
<li>强化学习需要海量的xx缺少可重复性,可复用性,鲁棒性.</li>
<li>自监督学习缺乏有效的预训练任务</li>
</ul>
<p>拼图任务改进自监督模型,使网络能够处理任意拼图布局从而更好地学习空间上下文提供的语义信息.</p>
<h3 id="132-通过虚拟环境更精确的学习知识">1.3.2 通过虚拟环境更精确的学习知识</h3>
<h1 id="2-mindspore计算框架开源">2 MindSpore计算框架开源</h1>
<ul>
<li>混合并行</li>
<li>云\边\端合一</li>
<li>兼顾学术工业</li>
<li>自动微分,并行计算,调优</li>
</ul>
<h1 id="3-modelarts-pro">3 ModelArts Pro</h1>
<p>从计算到认知的过程</p>
<p>生成API简单调用.</p>
<h1 id="4-hilens">4 HiLens</h1>
<p>端云协同多模态AI应用开发套件.</p>
<h1 id="5-atlas">5 Atlas</h1>
<p>检测工具.</p>
<p>分布式云计算:</p>
<ul>
<li>计算瓶颈</li>
<li>I/O瓶颈</li>
<li>内存瓶颈</li>
</ul>
<h1 id="名词">名词</h1>
<p>AA  自动数据扩增,对数据集的全局优化,容易带来图片语义的混淆.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第五周]]></title>
        <id>https://shxiangyan.github.io/post/di-wu-zhou/</id>
        <link href="https://shxiangyan.github.io/post/di-wu-zhou/">
        </link>
        <updated>2020-03-30T09:19:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1取得成果">1.取得成果</h1>
<figure data-type="image" tabindex="1"><img src="https://shxiangyan.github.io//post-images/1585560783488.png" alt="" loading="lazy"></figure>
<p>构建了数据分别在，VGG16、InceptionV3、ResNeXt50，Xception进行训练在Xception上表现最好，得到了可观的数据。</p>
<h1 id="2stk添加卫星保存场景">2.STK添加卫星保存场景</h1>
]]></content>
    </entry>
</feed>